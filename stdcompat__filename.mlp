include Filename

#if OCAML_VERSION < (4,00,0)
let current_temp_dir_name = ref temp_dir_name

let get_temp_dir_name () =
  !current_temp_dir_name

let set_temp_dir_name dir =
  current_temp_dir_name := dir

let temp_file ?(temp_dir = !current_temp_dir_name) prefix suffix =
  temp_file ~temp_dir prefix suffix
#endif

#if OCAML_VERSION < (4,03,0)
let prng = lazy (Random.State.make_self_init ())

let open_temp_file ?(mode = [Open_text]) ?(perms = 0o600)
    ?(temp_dir = get_temp_dir_name ()) prefix suffix =
  let rec try_name counter =
    let name =
      let rnd = Random.State.bits (Lazy.force prng) land 0xFFFFFF in
      concat temp_dir (Printf.sprintf "%s%06x%s" prefix rnd suffix) in
    try
      name,
      open_out_gen (Open_wronly :: Open_creat :: Open_excl :: mode) perms name
    with Sys_error _ as e ->
      if counter >= 1000 then
        raise e
      else
        try_name (succ counter) in
  try_name 0
#endif

#if OCAML_VERSION < (4,04,0)
let is_dir_sep c s i =
  if dir_sep.[0] <> c then
    false
  else
    let l = String.length dir_sep in
    if l = 1 then
      true
    else if i + l <= String.length s then
      String.sub s i l = dir_sep
    else
      false

let rec extension_start_from i s =
  if i < 0 then
    String.length s
  else
    let c = String.unsafe_get s i in
    if c = '.' then
      i
    else if is_dir_sep c s i then
      String.length s
    else
      extension_start_from (pred i) s

let extension_start s =
  extension_start_from (String.length s - 1) s

let extension s =
  let i = extension_start s in
  String.sub s i (String.length s - i)

let remove_extension s =
  let i = extension_start s in
  String.sub s 0 i
#endif
