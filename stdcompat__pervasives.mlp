include Pervasives

#if OCAML_VERSION < (4,00,0)
let hypot x y =
  sqrt (x *. x +. y *. y)

let copysign x y =
  if (x >= 0.) = (y >= 0.) then
    x
  else
    -. x
#endif

#if OCAML_VERSION < (4,01,0)
let ( |> ) x f = f x

let ( @@ ) f x = f x
#endif

#if OCAML_VERSION < (4,02,0)
external raise_notrace : exn -> 'a = "%raise"

let print_bytes = print_string

let prerr_bytes = prerr_string

let output_bytes = output_string

let output_substring = output

let really_input_string channel len =
  let s = String.create len in
  really_input channel s 0 len;
  s
#endif

#if OCAML_VERSION < (4,03,0)
type ('a, 'b) result
#ifdef HAS_RESULT_PKG
  = ('a, 'b) Result.result
#endif
  = Ok of 'a | Error of 'b
#endif

#if OCAML_VERSION < (4,05,0)
let bool_of_string_opt s =
  Stdcompat__tools.option_invalid bool_of_string s

let int_of_string_opt s =
  Stdcompat__tools.option_fail int_of_string s

let float_of_string_opt s =
  Stdcompat__tools.option_fail float_of_string s

let read_int_opt () =
  Stdcompat__tools.option_fail read_int ()

let read_float_opt () =
  Stdcompat__tools.option_fail read_float ()
#endif

#if OCAML_VERSION < (4,02,0)
type ('a, 'b, 'c, 'd, 'e, 'f) format6_ =
    ('a, 'b, 'c, 'd, 'e, 'f) format6
type ('a, 'b, 'c, 'd, 'e, 'f) format6 =
    ('a, 'b, 'c, 'd, 'e, 'f) format6_
#endif
