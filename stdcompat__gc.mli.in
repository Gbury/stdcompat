@BEGIN_FROM_3_12_0@
type stat = Gc.stat =
  {
  minor_words: float ;
  promoted_words: float ;
  major_words: float ;
  minor_collections: int ;
  major_collections: int ;
  heap_words: int ;
  heap_chunks: int ;
  live_words: int ;
  live_blocks: int ;
  free_words: int ;
  free_blocks: int ;
  largest_free: int ;
  fragments: int ;
  compactions: int ;
  top_heap_words: int ;
  stack_size: int }
@END_FROM_3_12_0@
@BEGIN_BEFORE_3_12_0@
type stat =
  {
  minor_words: float ;
  promoted_words: float ;
  major_words: float ;
  minor_collections: int ;
  major_collections: int ;
  heap_words: int ;
  heap_chunks: int ;
  live_words: int ;
  live_blocks: int ;
  free_words: int ;
  free_blocks: int ;
  largest_free: int ;
  fragments: int ;
  compactions: int ;
  top_heap_words: int ;
  stack_size: int }
@END_BEFORE_3_12_0@
(** @since 3.12.0:
    type stat =
      {
      minor_words: float ;
      promoted_words: float ;
      major_words: float ;
      minor_collections: int ;
      major_collections: int ;
      heap_words: int ;
      heap_chunks: int ;
      live_words: int ;
      live_blocks: int ;
      free_words: int ;
      free_blocks: int ;
      largest_free: int ;
      fragments: int ;
      compactions: int ;
      top_heap_words: int ;
      stack_size: int }
 *)

@BEGIN_FROM_4_08_0@
type control = Gc.control =
  {
  mutable minor_heap_size: int ;
  mutable major_heap_increment: int ;
  mutable space_overhead: int ;
  mutable verbose: int ;
  mutable max_overhead: int ;
  mutable stack_limit: int ;
  mutable allocation_policy: int ;
  window_size: int ;
  custom_major_ratio: int ;
  custom_minor_ratio: int ;
  custom_minor_max_size: int }
@END_FROM_4_08_0@
@BEGIN_BEFORE_4_08_0@
type control =
  {
  mutable minor_heap_size: int ;
  mutable major_heap_increment: int ;
  mutable space_overhead: int ;
  mutable verbose: int ;
  mutable max_overhead: int ;
  mutable stack_limit: int ;
  mutable allocation_policy: int ;
  window_size: int ;
  custom_major_ratio: int ;
  custom_minor_ratio: int ;
  custom_minor_max_size: int }
@END_BEFORE_4_08_0@
(** @since 4.08.0:
    type control =
      {
      mutable minor_heap_size: int ;
      mutable major_heap_increment: int ;
      mutable space_overhead: int ;
      mutable verbose: int ;
      mutable max_overhead: int ;
      mutable stack_limit: int ;
      mutable allocation_policy: int ;
      window_size: int ;
      custom_major_ratio: int ;
      custom_minor_ratio: int ;
      custom_minor_max_size: int }
 *)

type alarm = Gc.alarm
(** Alias for {!Gc.alarm} *)

@BEGIN_FROM_4_05_0@
external minor_words :
  unit -> ((float)[@unboxed ]) = "caml_gc_minor_words"
    "caml_gc_minor_words_unboxed"
@END_FROM_4_05_0@
@BEGIN_BEFORE_4_05_0@
@BEGIN_FROM_4_04_0@
external minor_words :
  unit -> ((float)[@unboxed ]) = "caml_gc_minor_words"
    "caml_gc_minor_words_unboxed"[@@noalloc ]
@END_FROM_4_04_0@
@BEGIN_BEFORE_4_04_0@
val minor_words : unit -> float
@END_BEFORE_4_04_0@

@END_BEFORE_4_05_0@
(** @since 4.05.0:
    external minor_words :
      unit -> ((float)[@unboxed ]) = "caml_gc_minor_words"
        "caml_gc_minor_words_unboxed"
@since 4.04.0:
external minor_words :
  unit -> ((float)[@unboxed ]) = "caml_gc_minor_words"
    "caml_gc_minor_words_unboxed"[@@noalloc ]
 *)

val finalise_last : (unit -> unit) -> 'a -> unit
(** @since 4.04.0: val finalise_last : (unit -> unit) -> 'a -> unit *)

@BEGIN_FROM_4_05_0@
external get_minor_free : unit -> int = "caml_get_minor_free"
@END_FROM_4_05_0@
@BEGIN_BEFORE_4_05_0@
@BEGIN_FROM_4_03_0@
external get_minor_free : unit -> int = "caml_get_minor_free"[@@noalloc ]
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
val get_minor_free : unit -> int
@END_BEFORE_4_03_0@

@END_BEFORE_4_05_0@
(** @since 4.05.0:
    external get_minor_free : unit -> int = "caml_get_minor_free"
@since 4.03.0:
external get_minor_free : unit -> int = "caml_get_minor_free"[@@noalloc ]
 *)

@BEGIN_FROM_4_03_0@
external get_bucket : int -> int = "caml_get_major_bucket"[@@noalloc ]
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
val get_bucket : int -> int
@END_BEFORE_4_03_0@
(** @since 4.03.0:
    external get_bucket : int -> int = "caml_get_major_bucket"[@@noalloc ]
 *)

@BEGIN_FROM_4_03_0@
external get_credit : unit -> int = "caml_get_major_credit"[@@noalloc ]
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
val get_credit : unit -> int
@END_BEFORE_4_03_0@
(** @since 4.03.0:
    external get_credit : unit -> int = "caml_get_major_credit"[@@noalloc ]
 *)

@BEGIN_FROM_4_03_0@
external huge_fallback_count : unit -> int = "caml_gc_huge_fallback_count"
@END_FROM_4_03_0@
@BEGIN_BEFORE_4_03_0@
val huge_fallback_count : unit -> int
@END_BEFORE_4_03_0@
(** @since 4.03.0:
    external huge_fallback_count :
      unit -> int = "caml_gc_huge_fallback_count"
 *)

@BEGIN_FROM_3_08_0@
external quick_stat : unit -> stat = "caml_gc_quick_stat"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
val quick_stat : unit -> stat
@END_BEFORE_3_08_0@
(** @since 3.08.0: external quick_stat : unit -> stat = "caml_gc_quick_stat"
 *)

val finalise_release : unit -> unit
(** @since 3.08.0: val finalise_release : unit -> unit *)

@BEGIN_FROM_3_08_0@
external stat : unit -> stat = "caml_gc_stat"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external stat : unit -> stat = "gc_stat"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external stat : unit -> stat = "caml_gc_stat"
@since 3.07.0: external stat : unit -> stat = "gc_stat"
 *)

@BEGIN_FROM_3_08_0@
external counters : unit -> (float * float * float) = "caml_gc_counters"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external counters : unit -> (float * float * float) = "gc_counters"
@END_BEFORE_3_08_0@
(** @since 3.08.0:
    external counters : unit -> (float * float * float) = "caml_gc_counters"
@since 3.07.0:
external counters : unit -> (float * float * float) = "gc_counters"
 *)

@BEGIN_FROM_3_08_0@
external get : unit -> control = "caml_gc_get"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external get : unit -> control = "gc_get"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external get : unit -> control = "caml_gc_get"
@since 3.07.0: external get : unit -> control = "gc_get"
 *)

@BEGIN_FROM_3_08_0@
external set : control -> unit = "caml_gc_set"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external set : control -> unit = "gc_set"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external set : control -> unit = "caml_gc_set"
@since 3.07.0: external set : control -> unit = "gc_set"
 *)

@BEGIN_FROM_3_08_0@
external minor : unit -> unit = "caml_gc_minor"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external minor : unit -> unit = "gc_minor"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external minor : unit -> unit = "caml_gc_minor"
@since 3.07.0: external minor : unit -> unit = "gc_minor"
 *)

@BEGIN_FROM_3_08_0@
external major_slice : int -> int = "caml_gc_major_slice"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external major_slice : int -> int = "gc_major_slice"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external major_slice : int -> int = "caml_gc_major_slice"
@since 3.07.0: external major_slice : int -> int = "gc_major_slice"
 *)

@BEGIN_FROM_3_08_0@
external major : unit -> unit = "caml_gc_major"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external major : unit -> unit = "gc_major"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external major : unit -> unit = "caml_gc_major"
@since 3.07.0: external major : unit -> unit = "gc_major"
 *)

@BEGIN_FROM_3_08_0@
external full_major : unit -> unit = "caml_gc_full_major"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external full_major : unit -> unit = "gc_full_major"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external full_major : unit -> unit = "caml_gc_full_major"
@since 3.07.0: external full_major : unit -> unit = "gc_full_major"
 *)

@BEGIN_FROM_3_08_0@
external compact : unit -> unit = "caml_gc_compaction"
@END_FROM_3_08_0@
@BEGIN_BEFORE_3_08_0@
external compact : unit -> unit = "gc_compaction"
@END_BEFORE_3_08_0@
(** @since 3.08.0: external compact : unit -> unit = "caml_gc_compaction"
@since 3.07.0: external compact : unit -> unit = "gc_compaction"
 *)

val print_stat : out_channel -> unit
(** Alias for {!Gc.print_stat} *)

val allocated_bytes : unit -> float
(** Alias for {!Gc.allocated_bytes} *)

val finalise : ('a -> unit) -> 'a -> unit
(** Alias for {!Gc.finalise} *)

val create_alarm : (unit -> unit) -> alarm
(** Alias for {!Gc.create_alarm} *)

val delete_alarm : alarm -> unit
(** Alias for {!Gc.delete_alarm} *)

