#if OCAML_VERSION < (4,03,0)
type t = int

let min = 0

let max = 0x10FFFF

let lo_bound = 0xD7FF

let hi_bound = 0xE000

let succ u =
  if u = lo_bound then
    hi_bound
  else if u = max then
    invalid_arg "Uchar.succ"
  else
    succ u

let pred u =
  if u = hi_bound then
    lo_bound
  else if u = min then
    invalid_arg "Uchar.pred"
  else
  pred u

let is_valid i =
  min <= i && i <= lo_bound || hi_bound <= i && i <= max

let of_int i =
  if is_valid i then
    i
  else
    invalid_arg "Uchar.of_int"

let unsafe_of_int i =
  i

let to_int i =
  i

let is_char u =
  u < 0x100

let of_char c =
  Char.code c

let to_char u =
  if is_char u then
    Char.unsafe_chr u
  else
    invalid_arg "Uchar.to_char"

let unsafe_to_char u =
  Char.unsafe_chr u

let equal : t -> t -> bool = ( = )

let compare : t -> t -> int = compare

let hash = to_int
#else
include Uchar
#endif

#if OCAML_VERSION < (4,06,0)
let bom = unsafe_of_int 0xFEFF

let rep = unsafe_of_int 0xFFFD
#endif
